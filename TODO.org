#+title: Todo

The overall goal of the project is to explore different techniques for implementing a Verification Condition Generator, which itself can be formally verified. In the future it would be interesting to further investigate this approach for building a verified VC Generator for eBPF.

The idea is that by writing the VC Generator in WhyML, we can formally verify the generator with Why3. Explicitly all lemmas and goals can be verified with little or no user involvement. Furthermore it should be possible to extract the generator in OCaml or C code based on the formalization.

In this project we will

    Define a VC Generator for a simple While-language using Why3 by:
        Formalizing the While Language
        Implement the weakest precondition calculus
    Investigate effectiveness and expressiveness of different SMT-solvers in the Why3 back-end.
    Test if it is at all possible to fully automate verification of said VC Generator (preferably without the use of proof assistants).
    Determine whether our VC generator is effective in generating verification conditions for a given While program.

Learning Objectives:

    Knowledge of previous work with program verification in Why3
    Get a deeper understanding of what it takes to formally verify a program, and what limitations there are for verification. Hence, being able to explain exactly what it takes to prove lemmas and goals without any user envolvement.
    Practical experience with formalizing functions that analyses and transforms an object language in WhyML.
